# -*- coding: utf-8 -*-
"""Main

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rbaxePKizlLo475DvckUwLFoXESeZE3F
"""

from data_fetcher import DataFetcher
from data_processor import DataProcessor
from model_trainer import ModelTrainer
from model_evaluator import ModelEvaluator
from sklearn.model_selection import train_test_split
import pandas as pd

def main():
    # Instanciar o coletor de dados e obter os dados
    data_fetcher = DataFetcher()
    fase_de_grupos = data_fetcher.fetch_data('https://api.sofascore.com/api/v1/unique-tournament/133/season/26681/team-events/total')

    # Instanciar o processador de dados e processar os dados
    data_processor = DataProcessor(pd.DataFrame(fase_de_grupos))
    processed_data = data_processor.process()

    # Definir os recursos (features) e o alvo (target)
    X = processed_data.drop(columns=['id', 'slug', 'index', 'fase'])
    y = [1 if x == 'final' else 0 for x in processed_data['fase']]

    # Dividir os dados em conjuntos de treinamento e teste
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

    # Treinar o modelo
    model_trainer = ModelTrainer(X_train, y_train)
    trained_model = model_trainer.train_model()

    # Avaliar o modelo
    model_evaluator = ModelEvaluator(trained_model, X_test, y_test)
    confusion_matrix_result = model_evaluator.evaluate_model()

    print("Matriz de Confus√£o:")
    print(confusion_matrix_result)

if __name__ == "__main__":
    main()